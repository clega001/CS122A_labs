
lab3_test_servant.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000005d0  00000664  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000026  00800106  00800106  0000066a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000066a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000069c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ed5  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a3b  00000000  00000000  00001681  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000878  00000000  00000000  000020bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000210  00000000  00000000  00002934  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e4  00000000  00000000  00002b44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000512  00000000  00000000  00003228  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000373a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	ad c1       	rjmp	.+858    	; 0x390 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ed       	ldi	r30, 0xD0	; 208
  a0:	f5 e0       	ldi	r31, 0x05	; 5
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 32       	cpi	r26, 0x2C	; 44
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f3 d1       	rcall	.+998    	; 0x4aa <main>
  c4:	83 c2       	rjmp	.+1286   	; 0x5cc <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TickFct_Speed>:
		
		default:
		break;
	}
	return r_state;
}
  c8:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <s_state>
  cc:	88 23       	and	r24, r24
  ce:	19 f0       	breq	.+6      	; 0xd6 <TickFct_Speed+0xe>
  d0:	81 30       	cpi	r24, 0x01	; 1
  d2:	39 f0       	breq	.+14     	; 0xe2 <TickFct_Speed+0x1a>
  d4:	04 c0       	rjmp	.+8      	; 0xde <TickFct_Speed+0x16>
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <s_state>
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <TickFct_Speed+0x1a>
  de:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <s_state>
  e2:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <s_state>
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	08 95       	ret

000000ea <TickFct_P1>:
  ea:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <p1_state>
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	51 f0       	breq	.+20     	; 0x106 <TickFct_P1+0x1c>
  f2:	28 f0       	brcs	.+10     	; 0xfe <TickFct_P1+0x14>
  f4:	82 30       	cpi	r24, 0x02	; 2
  f6:	79 f0       	breq	.+30     	; 0x116 <TickFct_P1+0x2c>
  f8:	83 30       	cpi	r24, 0x03	; 3
  fa:	d9 f0       	breq	.+54     	; 0x132 <TickFct_P1+0x48>
  fc:	26 c0       	rjmp	.+76     	; 0x14a <TickFct_P1+0x60>
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <p1_state>
 104:	24 c0       	rjmp	.+72     	; 0x14e <TickFct_P1+0x64>
 106:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 10a:	80 3a       	cpi	r24, 0xA0	; 160
 10c:	01 f5       	brne	.+64     	; 0x14e <TickFct_P1+0x64>
 10e:	82 e0       	ldi	r24, 0x02	; 2
 110:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <p1_state>
 114:	20 c0       	rjmp	.+64     	; 0x156 <TickFct_P1+0x6c>
 116:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 11a:	80 3a       	cpi	r24, 0xA0	; 160
 11c:	31 f4       	brne	.+12     	; 0x12a <TickFct_P1+0x40>
 11e:	83 e0       	ldi	r24, 0x03	; 3
 120:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <p1_state>
 124:	8f e0       	ldi	r24, 0x0F	; 15
 126:	88 b9       	out	0x08, r24	; 8
 128:	12 c0       	rjmp	.+36     	; 0x14e <TickFct_P1+0x64>
 12a:	81 e0       	ldi	r24, 0x01	; 1
 12c:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <p1_state>
 130:	0e c0       	rjmp	.+28     	; 0x14e <TickFct_P1+0x64>
 132:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 136:	80 3a       	cpi	r24, 0xA0	; 160
 138:	21 f4       	brne	.+8      	; 0x142 <TickFct_P1+0x58>
 13a:	82 e0       	ldi	r24, 0x02	; 2
 13c:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <p1_state>
 140:	0a c0       	rjmp	.+20     	; 0x156 <TickFct_P1+0x6c>
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <p1_state>
 148:	02 c0       	rjmp	.+4      	; 0x14e <TickFct_P1+0x64>
 14a:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <p1_state>
 14e:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <p1_state>
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	08 95       	ret
 156:	80 ef       	ldi	r24, 0xF0	; 240
 158:	88 b9       	out	0x08, r24	; 8
 15a:	f9 cf       	rjmp	.-14     	; 0x14e <TickFct_P1+0x64>

0000015c <TickFct_P2>:
 15c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <p2_state>
 160:	81 30       	cpi	r24, 0x01	; 1
 162:	51 f0       	breq	.+20     	; 0x178 <TickFct_P2+0x1c>
 164:	28 f0       	brcs	.+10     	; 0x170 <TickFct_P2+0x14>
 166:	82 30       	cpi	r24, 0x02	; 2
 168:	79 f0       	breq	.+30     	; 0x188 <TickFct_P2+0x2c>
 16a:	83 30       	cpi	r24, 0x03	; 3
 16c:	d9 f0       	breq	.+54     	; 0x1a4 <TickFct_P2+0x48>
 16e:	26 c0       	rjmp	.+76     	; 0x1bc <TickFct_P2+0x60>
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <p2_state>
 176:	24 c0       	rjmp	.+72     	; 0x1c0 <TickFct_P2+0x64>
 178:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 17c:	80 3b       	cpi	r24, 0xB0	; 176
 17e:	01 f5       	brne	.+64     	; 0x1c0 <TickFct_P2+0x64>
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <p2_state>
 186:	20 c0       	rjmp	.+64     	; 0x1c8 <TickFct_P2+0x6c>
 188:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 18c:	80 3b       	cpi	r24, 0xB0	; 176
 18e:	31 f4       	brne	.+12     	; 0x19c <TickFct_P2+0x40>
 190:	83 e0       	ldi	r24, 0x03	; 3
 192:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <p2_state>
 196:	85 e5       	ldi	r24, 0x55	; 85
 198:	88 b9       	out	0x08, r24	; 8
 19a:	12 c0       	rjmp	.+36     	; 0x1c0 <TickFct_P2+0x64>
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <p2_state>
 1a2:	0e c0       	rjmp	.+28     	; 0x1c0 <TickFct_P2+0x64>
 1a4:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 1a8:	80 3b       	cpi	r24, 0xB0	; 176
 1aa:	21 f4       	brne	.+8      	; 0x1b4 <TickFct_P2+0x58>
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <p2_state>
 1b2:	0a c0       	rjmp	.+20     	; 0x1c8 <TickFct_P2+0x6c>
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <p2_state>
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <TickFct_P2+0x64>
 1bc:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <p2_state>
 1c0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <p2_state>
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	08 95       	ret
 1c8:	8a ea       	ldi	r24, 0xAA	; 170
 1ca:	88 b9       	out	0x08, r24	; 8
 1cc:	f9 cf       	rjmp	.-14     	; 0x1c0 <TickFct_P2+0x64>

000001ce <TickFct_P3>:
 1ce:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <p3_state>
 1d2:	81 30       	cpi	r24, 0x01	; 1
 1d4:	41 f0       	breq	.+16     	; 0x1e6 <TickFct_P3+0x18>
 1d6:	18 f0       	brcs	.+6      	; 0x1de <TickFct_P3+0x10>
 1d8:	82 30       	cpi	r24, 0x02	; 2
 1da:	69 f0       	breq	.+26     	; 0x1f6 <TickFct_P3+0x28>
 1dc:	14 c0       	rjmp	.+40     	; 0x206 <TickFct_P3+0x38>
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <p3_state>
 1e4:	1a c0       	rjmp	.+52     	; 0x21a <TickFct_P3+0x4c>
 1e6:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 1ea:	80 3c       	cpi	r24, 0xC0	; 192
 1ec:	b1 f4       	brne	.+44     	; 0x21a <TickFct_P3+0x4c>
 1ee:	82 e0       	ldi	r24, 0x02	; 2
 1f0:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <p3_state>
 1f4:	16 c0       	rjmp	.+44     	; 0x222 <TickFct_P3+0x54>
 1f6:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 1fa:	80 3c       	cpi	r24, 0xC0	; 192
 1fc:	91 f0       	breq	.+36     	; 0x222 <TickFct_P3+0x54>
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <p3_state>
 204:	0a c0       	rjmp	.+20     	; 0x21a <TickFct_P3+0x4c>
 206:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <p3_state>
 20a:	07 c0       	rjmp	.+14     	; 0x21a <TickFct_P3+0x4c>
 20c:	80 e8       	ldi	r24, 0x80	; 128
 20e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <shifty>
 212:	03 c0       	rjmp	.+6      	; 0x21a <TickFct_P3+0x4c>
 214:	86 95       	lsr	r24
 216:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <shifty>
 21a:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <p3_state>
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	08 95       	ret
 222:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <shifty>
 226:	88 b9       	out	0x08, r24	; 8
 228:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <shifty>
 22c:	81 30       	cpi	r24, 0x01	; 1
 22e:	91 f7       	brne	.-28     	; 0x214 <TickFct_P3+0x46>
 230:	ed cf       	rjmp	.-38     	; 0x20c <TickFct_P3+0x3e>

00000232 <TickFct_P4>:
 232:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <p4_state>
 236:	81 30       	cpi	r24, 0x01	; 1
 238:	51 f0       	breq	.+20     	; 0x24e <TickFct_P4+0x1c>
 23a:	28 f0       	brcs	.+10     	; 0x246 <TickFct_P4+0x14>
 23c:	82 30       	cpi	r24, 0x02	; 2
 23e:	79 f0       	breq	.+30     	; 0x25e <TickFct_P4+0x2c>
 240:	83 30       	cpi	r24, 0x03	; 3
 242:	e1 f0       	breq	.+56     	; 0x27c <TickFct_P4+0x4a>
 244:	2b c0       	rjmp	.+86     	; 0x29c <TickFct_P4+0x6a>
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <p4_state>
 24c:	29 c0       	rjmp	.+82     	; 0x2a0 <TickFct_P4+0x6e>
 24e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 252:	80 3d       	cpi	r24, 0xD0	; 208
 254:	29 f5       	brne	.+74     	; 0x2a0 <TickFct_P4+0x6e>
 256:	82 e0       	ldi	r24, 0x02	; 2
 258:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <p4_state>
 25c:	25 c0       	rjmp	.+74     	; 0x2a8 <TickFct_P4+0x76>
 25e:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 262:	80 3d       	cpi	r24, 0xD0	; 208
 264:	39 f4       	brne	.+14     	; 0x274 <TickFct_P4+0x42>
 266:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 26a:	83 30       	cpi	r24, 0x03	; 3
 26c:	e9 f4       	brne	.+58     	; 0x2a8 <TickFct_P4+0x76>
 26e:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <p4_state>
 272:	23 c0       	rjmp	.+70     	; 0x2ba <TickFct_P4+0x88>
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <p4_state>
 27a:	12 c0       	rjmp	.+36     	; 0x2a0 <TickFct_P4+0x6e>
 27c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
 280:	80 3d       	cpi	r24, 0xD0	; 208
 282:	41 f4       	brne	.+16     	; 0x294 <TickFct_P4+0x62>
 284:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 288:	80 3c       	cpi	r24, 0xC0	; 192
 28a:	b9 f4       	brne	.+46     	; 0x2ba <TickFct_P4+0x88>
 28c:	82 e0       	ldi	r24, 0x02	; 2
 28e:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <p4_state>
 292:	0a c0       	rjmp	.+20     	; 0x2a8 <TickFct_P4+0x76>
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <p4_state>
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <TickFct_P4+0x6e>
 29c:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <p4_state>
 2a0:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <p4_state>
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	08 95       	ret
 2a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2ac:	88 b9       	out	0x08, r24	; 8
 2ae:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2b2:	86 95       	lsr	r24
 2b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2b8:	f3 cf       	rjmp	.-26     	; 0x2a0 <TickFct_P4+0x6e>
 2ba:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2be:	88 b9       	out	0x08, r24	; 8
 2c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 2c4:	88 0f       	add	r24, r24
 2c6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2ca:	ea cf       	rjmp	.-44     	; 0x2a0 <TickFct_P4+0x6e>

000002cc <TimerOn>:
 2cc:	8b e0       	ldi	r24, 0x0B	; 11
 2ce:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 2d2:	8d e7       	ldi	r24, 0x7D	; 125
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 2da:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 2de:	82 e0       	ldi	r24, 0x02	; 2
 2e0:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 2e4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 2e8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 2ec:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_avr_timer_M>
 2f0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_avr_timer_M+0x1>
 2f4:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <_avr_timer_M+0x2>
 2f8:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <_avr_timer_M+0x3>
 2fc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_avr_timer_cntcurr>
 300:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <_avr_timer_cntcurr+0x1>
 304:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <_avr_timer_cntcurr+0x2>
 308:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <_avr_timer_cntcurr+0x3>
 30c:	8f b7       	in	r24, 0x3f	; 63
 30e:	80 68       	ori	r24, 0x80	; 128
 310:	8f bf       	out	0x3f, r24	; 63
 312:	08 95       	ret

00000314 <TimerISR>:
 314:	ef 92       	push	r14
 316:	ff 92       	push	r15
 318:	0f 93       	push	r16
 31a:	1f 93       	push	r17
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	c0 e1       	ldi	r28, 0x10	; 16
 322:	d1 e0       	ldi	r29, 0x01	; 1
 324:	0f 2e       	mov	r0, r31
 326:	f8 e2       	ldi	r31, 0x28	; 40
 328:	ef 2e       	mov	r14, r31
 32a:	f1 e0       	ldi	r31, 0x01	; 1
 32c:	ff 2e       	mov	r15, r31
 32e:	f0 2d       	mov	r31, r0
 330:	8e 01       	movw	r16, r28
 332:	4e 81       	ldd	r20, Y+6	; 0x06
 334:	5f 81       	ldd	r21, Y+7	; 0x07
 336:	68 85       	ldd	r22, Y+8	; 0x08
 338:	79 85       	ldd	r23, Y+9	; 0x09
 33a:	8a 81       	ldd	r24, Y+2	; 0x02
 33c:	9b 81       	ldd	r25, Y+3	; 0x03
 33e:	ac 81       	ldd	r26, Y+4	; 0x04
 340:	bd 81       	ldd	r27, Y+5	; 0x05
 342:	48 17       	cp	r20, r24
 344:	59 07       	cpc	r21, r25
 346:	6a 07       	cpc	r22, r26
 348:	7b 07       	cpc	r23, r27
 34a:	58 f0       	brcs	.+22     	; 0x362 <TimerISR+0x4e>
 34c:	ea 85       	ldd	r30, Y+10	; 0x0a
 34e:	fb 85       	ldd	r31, Y+11	; 0x0b
 350:	88 81       	ld	r24, Y
 352:	99 81       	ldd	r25, Y+1	; 0x01
 354:	09 95       	icall
 356:	99 83       	std	Y+1, r25	; 0x01
 358:	88 83       	st	Y, r24
 35a:	1e 82       	std	Y+6, r1	; 0x06
 35c:	1f 82       	std	Y+7, r1	; 0x07
 35e:	18 86       	std	Y+8, r1	; 0x08
 360:	19 86       	std	Y+9, r1	; 0x09
 362:	f8 01       	movw	r30, r16
 364:	86 81       	ldd	r24, Z+6	; 0x06
 366:	97 81       	ldd	r25, Z+7	; 0x07
 368:	a0 85       	ldd	r26, Z+8	; 0x08
 36a:	b1 85       	ldd	r27, Z+9	; 0x09
 36c:	c2 96       	adiw	r24, 0x32	; 50
 36e:	a1 1d       	adc	r26, r1
 370:	b1 1d       	adc	r27, r1
 372:	86 83       	std	Z+6, r24	; 0x06
 374:	97 83       	std	Z+7, r25	; 0x07
 376:	a0 87       	std	Z+8, r26	; 0x08
 378:	b1 87       	std	Z+9, r27	; 0x09
 37a:	2c 96       	adiw	r28, 0x0c	; 12
 37c:	ce 15       	cp	r28, r14
 37e:	df 05       	cpc	r29, r15
 380:	b9 f6       	brne	.-82     	; 0x330 <TimerISR+0x1c>
 382:	df 91       	pop	r29
 384:	cf 91       	pop	r28
 386:	1f 91       	pop	r17
 388:	0f 91       	pop	r16
 38a:	ff 90       	pop	r15
 38c:	ef 90       	pop	r14
 38e:	08 95       	ret

00000390 <__vector_13>:
 390:	1f 92       	push	r1
 392:	0f 92       	push	r0
 394:	0f b6       	in	r0, 0x3f	; 63
 396:	0f 92       	push	r0
 398:	11 24       	eor	r1, r1
 39a:	0b b6       	in	r0, 0x3b	; 59
 39c:	0f 92       	push	r0
 39e:	2f 93       	push	r18
 3a0:	3f 93       	push	r19
 3a2:	4f 93       	push	r20
 3a4:	5f 93       	push	r21
 3a6:	6f 93       	push	r22
 3a8:	7f 93       	push	r23
 3aa:	8f 93       	push	r24
 3ac:	9f 93       	push	r25
 3ae:	af 93       	push	r26
 3b0:	bf 93       	push	r27
 3b2:	ef 93       	push	r30
 3b4:	ff 93       	push	r31
 3b6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <_avr_timer_cntcurr>
 3ba:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <_avr_timer_cntcurr+0x1>
 3be:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <_avr_timer_cntcurr+0x2>
 3c2:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <_avr_timer_cntcurr+0x3>
 3c6:	01 97       	sbiw	r24, 0x01	; 1
 3c8:	a1 09       	sbc	r26, r1
 3ca:	b1 09       	sbc	r27, r1
 3cc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_avr_timer_cntcurr>
 3d0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <_avr_timer_cntcurr+0x1>
 3d4:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <_avr_timer_cntcurr+0x2>
 3d8:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <_avr_timer_cntcurr+0x3>
 3dc:	89 2b       	or	r24, r25
 3de:	8a 2b       	or	r24, r26
 3e0:	8b 2b       	or	r24, r27
 3e2:	89 f4       	brne	.+34     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e4:	97 df       	rcall	.-210    	; 0x314 <TimerISR>
 3e6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <_avr_timer_M>
 3ea:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <_avr_timer_M+0x1>
 3ee:	a0 91 04 01 	lds	r26, 0x0104	; 0x800104 <_avr_timer_M+0x2>
 3f2:	b0 91 05 01 	lds	r27, 0x0105	; 0x800105 <_avr_timer_M+0x3>
 3f6:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_avr_timer_cntcurr>
 3fa:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <_avr_timer_cntcurr+0x1>
 3fe:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <_avr_timer_cntcurr+0x2>
 402:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <_avr_timer_cntcurr+0x3>
 406:	ff 91       	pop	r31
 408:	ef 91       	pop	r30
 40a:	bf 91       	pop	r27
 40c:	af 91       	pop	r26
 40e:	9f 91       	pop	r25
 410:	8f 91       	pop	r24
 412:	7f 91       	pop	r23
 414:	6f 91       	pop	r22
 416:	5f 91       	pop	r21
 418:	4f 91       	pop	r20
 41a:	3f 91       	pop	r19
 41c:	2f 91       	pop	r18
 41e:	0f 90       	pop	r0
 420:	0b be       	out	0x3b, r0	; 59
 422:	0f 90       	pop	r0
 424:	0f be       	out	0x3f, r0	; 63
 426:	0f 90       	pop	r0
 428:	1f 90       	pop	r1
 42a:	18 95       	reti

0000042c <TimerSet>:
 42c:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <_avr_timer_M>
 430:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <_avr_timer_M+0x1>
 434:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_avr_timer_M+0x2>
 438:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_avr_timer_M+0x3>
 43c:	60 93 0a 01 	sts	0x010A, r22	; 0x80010a <_avr_timer_cntcurr>
 440:	70 93 0b 01 	sts	0x010B, r23	; 0x80010b <_avr_timer_cntcurr+0x1>
 444:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <_avr_timer_cntcurr+0x2>
 448:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <_avr_timer_cntcurr+0x3>
 44c:	08 95       	ret

0000044e <TaskRedifine>:
	return p4_state;
}
// --------END User defined FSMs-----------------------------------------------

void TaskRedifine(unsigned char tasknum, unsigned char setPeriod, int (*stateMachine)(int))
{
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	00 d0       	rcall	.+0      	; 0x454 <TaskRedifine+0x6>
 454:	cd b7       	in	r28, 0x3d	; 61
 456:	de b7       	in	r29, 0x3e	; 62
 458:	5a 83       	std	Y+2, r21	; 0x02
 45a:	49 83       	std	Y+1, r20	; 0x01
	_avr_timer_cntcurr = _avr_timer_M;
	SREG |= 0x80; // 0x80: 1000000
}

void TimerOff() {
	TCCR1B = 0x00; // bit3bit1bit0=000: timer off
 45c:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
// --------END User defined FSMs-----------------------------------------------

void TaskRedifine(unsigned char tasknum, unsigned char setPeriod, int (*stateMachine)(int))
{
	TimerOff();
	tasks[tasknum].period = setPeriod;
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	fc 01       	movw	r30, r24
 464:	ee 0f       	add	r30, r30
 466:	ff 1f       	adc	r31, r31
 468:	df 01       	movw	r26, r30
 46a:	a8 0f       	add	r26, r24
 46c:	b9 1f       	adc	r27, r25
 46e:	aa 0f       	add	r26, r26
 470:	bb 1f       	adc	r27, r27
 472:	aa 0f       	add	r26, r26
 474:	bb 1f       	adc	r27, r27
 476:	a0 5f       	subi	r26, 0xF0	; 240
 478:	be 4f       	sbci	r27, 0xFE	; 254
 47a:	46 2f       	mov	r20, r22
 47c:	50 e0       	ldi	r21, 0x00	; 0
 47e:	60 e0       	ldi	r22, 0x00	; 0
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	12 96       	adiw	r26, 0x02	; 2
 484:	4d 93       	st	X+, r20
 486:	5d 93       	st	X+, r21
 488:	6d 93       	st	X+, r22
 48a:	7c 93       	st	X, r23
 48c:	15 97       	sbiw	r26, 0x05	; 5
	tasks[tasknum].state = 0;
 48e:	11 96       	adiw	r26, 0x01	; 1
 490:	1c 92       	st	X, r1
 492:	1e 92       	st	-X, r1
	tasks[tasknum].TickFct = &stateMachine;
 494:	fd 01       	movw	r30, r26
 496:	ce 01       	movw	r24, r28
 498:	01 96       	adiw	r24, 0x01	; 1
 49a:	93 87       	std	Z+11, r25	; 0x0b
 49c:	82 87       	std	Z+10, r24	; 0x0a
	TimerOn();
 49e:	16 df       	rcall	.-468    	; 0x2cc <TimerOn>
}
 4a0:	0f 90       	pop	r0
 4a2:	0f 90       	pop	r0
 4a4:	df 91       	pop	r29
 4a6:	cf 91       	pop	r28
 4a8:	08 95       	ret

000004aa <main>:
unsigned char n = 0x00;

int main(void)
{
	// Set Data Direction Registers
	DDRB = 0x00; PORTB = 0x00;
 4aa:	14 b8       	out	0x04, r1	; 4
 4ac:	15 b8       	out	0x05, r1	; 5
	DDRC = 0xFF; PORTC = 0x00;
 4ae:	8f ef       	ldi	r24, 0xFF	; 255
 4b0:	87 b9       	out	0x07, r24	; 7
 4b2:	18 b8       	out	0x08, r1	; 8

	unsigned char k = 0x00;

	tasks[0].state = r_start;
 4b4:	e0 e1       	ldi	r30, 0x10	; 16
 4b6:	f1 e0       	ldi	r31, 0x01	; 1
 4b8:	11 82       	std	Z+1, r1	; 0x01
 4ba:	10 82       	st	Z, r1
	tasks[0].period = 50;
 4bc:	82 e3       	ldi	r24, 0x32	; 50
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	a0 e0       	ldi	r26, 0x00	; 0
 4c2:	b0 e0       	ldi	r27, 0x00	; 0
 4c4:	82 83       	std	Z+2, r24	; 0x02
 4c6:	93 83       	std	Z+3, r25	; 0x03
 4c8:	a4 83       	std	Z+4, r26	; 0x04
 4ca:	b5 83       	std	Z+5, r27	; 0x05
	tasks[0].elapsedTime = 0;
 4cc:	16 82       	std	Z+6, r1	; 0x06
 4ce:	17 82       	std	Z+7, r1	; 0x07
 4d0:	10 86       	std	Z+8, r1	; 0x08
 4d2:	11 86       	std	Z+9, r1	; 0x09
	tasks[0].TickFct = &TickFct_Receive;
	
	tasks[1].state = s_start;
 4d4:	15 86       	std	Z+13, r1	; 0x0d
 4d6:	14 86       	std	Z+12, r1	; 0x0c
	tasks[1].period = 50;
 4d8:	86 87       	std	Z+14, r24	; 0x0e
 4da:	97 87       	std	Z+15, r25	; 0x0f
 4dc:	a0 8b       	std	Z+16, r26	; 0x10
 4de:	b1 8b       	std	Z+17, r27	; 0x11
	tasks[1].elapsedTime = 0;
 4e0:	12 8a       	std	Z+18, r1	; 0x12
 4e2:	13 8a       	std	Z+19, r1	; 0x13
 4e4:	14 8a       	std	Z+20, r1	; 0x14
 4e6:	15 8a       	std	Z+21, r1	; 0x15
	tasks[1].TickFct = &TickFct_Speed;
 4e8:	84 e6       	ldi	r24, 0x64	; 100
 4ea:	90 e0       	ldi	r25, 0x00	; 0
 4ec:	97 8b       	std	Z+23, r25	; 0x17
 4ee:	86 8b       	std	Z+22, r24	; 0x16
	
	tasks[0].state = p1_start;
	tasks[0].period = 50;
	tasks[0].elapsedTime = 0;
	tasks[0].TickFct = &TickFct_P1;
 4f0:	85 e7       	ldi	r24, 0x75	; 117
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	93 87       	std	Z+11, r25	; 0x0b
 4f6:	82 87       	std	Z+10, r24	; 0x0a
		
		
	TimerSet(50);
 4f8:	62 e3       	ldi	r22, 0x32	; 50
 4fa:	70 e0       	ldi	r23, 0x00	; 0
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	90 e0       	ldi	r25, 0x00	; 0
 500:	95 df       	rcall	.-214    	; 0x42c <TimerSet>
	TimerOn();
 502:	e4 de       	rcall	.-568    	; 0x2cc <TimerOn>
 504:	0f 2e       	mov	r0, r31
		}
		else if(pattern == 0xC0){
			m = TickFct_P3;
		}
		else if(pattern == 0xD0){
			m = TickFct_P4;
 506:	f9 e1       	ldi	r31, 0x19	; 25
 508:	cf 2e       	mov	r12, r31
 50a:	f1 e0       	ldi	r31, 0x01	; 1
 50c:	df 2e       	mov	r13, r31
 50e:	f0 2d       	mov	r31, r0
 510:	0f 2e       	mov	r0, r31
		}
		else if(pattern == 0xB0){
			m = TickFct_P2;
		}
		else if(pattern == 0xC0){
			m = TickFct_P3;
 512:	f7 ee       	ldi	r31, 0xE7	; 231
 514:	ef 2e       	mov	r14, r31
 516:	f0 e0       	ldi	r31, 0x00	; 0
 518:	ff 2e       	mov	r15, r31
 51a:	f0 2d       	mov	r31, r0
 51c:	0e ea       	ldi	r16, 0xAE	; 174
		
		if(pattern == 0xA0){
			m = TickFct_P1;
		}
		else if(pattern == 0xB0){
			m = TickFct_P2;
 51e:	10 e0       	ldi	r17, 0x00	; 0
 520:	c5 e7       	ldi	r28, 0x75	; 117
	TimerOn();
	while (1)
	{
		
		if(pattern == 0xA0){
			m = TickFct_P1;
 522:	d0 e0       	ldi	r29, 0x00	; 0
 524:	0f 2e       	mov	r0, r31
		}
		else if(speed == 0x05){
			n = 100;
		}
		else if(speed == 0x06){
			n = 50;
 526:	f2 e3       	ldi	r31, 0x32	; 50
 528:	6f 2e       	mov	r6, r31
 52a:	f0 2d       	mov	r31, r0
 52c:	0f 2e       	mov	r0, r31
		}
		else if(speed == 0x04){
			n = 250;
		}
		else if(speed == 0x05){
			n = 100;
 52e:	f4 e6       	ldi	r31, 0x64	; 100
 530:	7f 2e       	mov	r7, r31
 532:	f0 2d       	mov	r31, r0
 534:	0f 2e       	mov	r0, r31
		}
		else if(speed == 0x03){
			n = 500;
		}
		else if(speed == 0x04){
			n = 250;
 536:	fa ef       	ldi	r31, 0xFA	; 250
 538:	8f 2e       	mov	r8, r31
 53a:	f0 2d       	mov	r31, r0
 53c:	0f 2e       	mov	r0, r31
		}
		else if(speed == 0x02){
			n = 1000;
		}
		else if(speed == 0x03){
			n = 500;
 53e:	f4 ef       	ldi	r31, 0xF4	; 244
 540:	9f 2e       	mov	r9, r31
 542:	f0 2d       	mov	r31, r0
 544:	0f 2e       	mov	r0, r31
		
		if(speed == 0x01){
			n = 2000;
		}
		else if(speed == 0x02){
			n = 1000;
 546:	f8 ee       	ldi	r31, 0xE8	; 232
 548:	af 2e       	mov	r10, r31
 54a:	f0 2d       	mov	r31, r0
 54c:	0f 2e       	mov	r0, r31
		else if(pattern == 0xD0){
			m = TickFct_P4;
		}
		
		if(speed == 0x01){
			n = 2000;
 54e:	f0 ed       	ldi	r31, 0xD0	; 208
 550:	bf 2e       	mov	r11, r31
 552:	f0 2d       	mov	r31, r0
 554:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <pattern>
	TimerSet(50);
	TimerOn();
	while (1)
	{
		
		if(pattern == 0xA0){
 558:	80 3a       	cpi	r24, 0xA0	; 160
 55a:	19 f4       	brne	.+6      	; 0x562 <main+0xb8>
 55c:	c0 93 07 01 	sts	0x0107, r28	; 0x800107 <m>
			m = TickFct_P1;
 560:	0e c0       	rjmp	.+28     	; 0x57e <main+0xd4>
 562:	80 3b       	cpi	r24, 0xB0	; 176
		}
		else if(pattern == 0xB0){
 564:	19 f4       	brne	.+6      	; 0x56c <main+0xc2>
 566:	00 93 07 01 	sts	0x0107, r16	; 0x800107 <m>
			m = TickFct_P2;
 56a:	09 c0       	rjmp	.+18     	; 0x57e <main+0xd4>
 56c:	80 3c       	cpi	r24, 0xC0	; 192
		}
		else if(pattern == 0xC0){
 56e:	19 f4       	brne	.+6      	; 0x576 <main+0xcc>
 570:	e0 92 07 01 	sts	0x0107, r14	; 0x800107 <m>
			m = TickFct_P3;
 574:	04 c0       	rjmp	.+8      	; 0x57e <main+0xd4>
 576:	80 3d       	cpi	r24, 0xD0	; 208
		}
		else if(pattern == 0xD0){
 578:	11 f4       	brne	.+4      	; 0x57e <main+0xd4>
 57a:	c0 92 07 01 	sts	0x0107, r12	; 0x800107 <m>
			m = TickFct_P4;
 57e:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <speed>
		}
		
		if(speed == 0x01){
 582:	81 30       	cpi	r24, 0x01	; 1
 584:	19 f4       	brne	.+6      	; 0x58c <main+0xe2>
 586:	b0 92 06 01 	sts	0x0106, r11	; 0x800106 <__data_end>
			n = 2000;
 58a:	18 c0       	rjmp	.+48     	; 0x5bc <main+0x112>
 58c:	82 30       	cpi	r24, 0x02	; 2
		}
		else if(speed == 0x02){
 58e:	19 f4       	brne	.+6      	; 0x596 <main+0xec>
 590:	a0 92 06 01 	sts	0x0106, r10	; 0x800106 <__data_end>
			n = 1000;
 594:	13 c0       	rjmp	.+38     	; 0x5bc <main+0x112>
 596:	83 30       	cpi	r24, 0x03	; 3
		}
		else if(speed == 0x03){
 598:	19 f4       	brne	.+6      	; 0x5a0 <main+0xf6>
 59a:	90 92 06 01 	sts	0x0106, r9	; 0x800106 <__data_end>
			n = 500;
 59e:	0e c0       	rjmp	.+28     	; 0x5bc <main+0x112>
 5a0:	84 30       	cpi	r24, 0x04	; 4
		}
		else if(speed == 0x04){
 5a2:	19 f4       	brne	.+6      	; 0x5aa <main+0x100>
 5a4:	80 92 06 01 	sts	0x0106, r8	; 0x800106 <__data_end>
			n = 250;
 5a8:	09 c0       	rjmp	.+18     	; 0x5bc <main+0x112>
 5aa:	85 30       	cpi	r24, 0x05	; 5
		}
		else if(speed == 0x05){
 5ac:	19 f4       	brne	.+6      	; 0x5b4 <main+0x10a>
 5ae:	70 92 06 01 	sts	0x0106, r7	; 0x800106 <__data_end>
			n = 100;
 5b2:	04 c0       	rjmp	.+8      	; 0x5bc <main+0x112>
 5b4:	86 30       	cpi	r24, 0x06	; 6
		}
		else if(speed == 0x06){
 5b6:	11 f4       	brne	.+4      	; 0x5bc <main+0x112>
 5b8:	60 92 06 01 	sts	0x0106, r6	; 0x800106 <__data_end>
			n = 50;
 5bc:	40 91 07 01 	lds	r20, 0x0107	; 0x800107 <m>
		}
		
		TaskRedifine(2, n, m);
 5c0:	50 e0       	ldi	r21, 0x00	; 0
 5c2:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <__data_end>
 5c6:	82 e0       	ldi	r24, 0x02	; 2
 5c8:	42 df       	rcall	.-380    	; 0x44e <TaskRedifine>
 5ca:	c4 cf       	rjmp	.-120    	; 0x554 <main+0xaa>

000005cc <_exit>:
		
		continue;
	}
 5cc:	f8 94       	cli

000005ce <__stop_program>:
 5ce:	ff cf       	rjmp	.-2      	; 0x5ce <__stop_program>
